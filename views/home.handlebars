<!-- CHECK LATER - Polyfill Draggable -->

<div id="cubecontainer">
  <div id="cube-1" draggable="true" ondragstart="drag(event)" class="cube cube-1">
    <div class="face"></div>
    <div class="face"></div>
    <div class="face"></div>
    <div class="face"></div>
    <div class="face"></div>
    <div class="face"></div>
  </div>
</div>

<def>

<button id="cubegen">Generate a thing</button>

<button id="generate">Generate Grid</button>
<button id="rotate-ccw">Counterclockwise</button>
<button id="rotate-cw">Clockwise</button>

Rows: <input id="row">
Columns: <input id="column">
Height: <input id="height">

<div id="container" ondrop="drop(event)" ondragover="allowDrop(event)">

</div>

<script>
// Just a shortcut
function getElement(id) {
  return document.getElementById(id)
}
// ==============
// === Rotate ===
// ==============

const cntClockwise = getElement("rotate-ccw")
const clockwise = getElement("rotate-cw")
let tf = -45
let defaultTF = "rotateX(60deg) rotateY(0deg) rotateZ("

cntClockwise.onmousedown = function(e){
    if(grid){
        console.log(grid)
        tf = tf - 90
        grid.style.transform = defaultTF + tf +"deg)";
    }
}

clockwise.onmousedown = function(e){
    if(grid){
        console.log(grid)
        tf = tf + 90
        grid.style.transform = defaultTF + tf +"deg)";
    }
}


// ==============
// ==== Grid ====
// ==============
let lastClicked;
let generate = document.getElementById("generate")
let grid;
const cubecont = getElement("cubecontainer")
const gridcont = getElement("container")

generate.onmousedown = function(e){
    let height = document.getElementById('height').value
    let rows = document.getElementById('row').value
    let cols = document.getElementById('column').value
    tf = -45;
    
    if (grid){
        grid.remove()
    }
    grid = clickableGrid(rows, cols, function(el,row,col,i){
        console.log("You clicked on element:",el);
        console.log("You clicked on row:",row);
        console.log("You clicked on col:",col);
        console.log("You clicked on item #:",i);

        el.className='clicked';
        if (lastClicked) lastClicked.className='';
        lastClicked = el;
    });
    gridcont.appendChild(grid);
}

function clickableGrid(rows, cols, callback ){
    let i = 0;
    let grid = document.createElement('table');
    grid.className = 'grid';
    grid.style.width = (50 * cols) + "px";
    grid.style.left = (11 * cols) + "px";
    grid.style.top = 300+(-3 * cols) + "px";

    for (let r=0; r<rows; ++r){
        let tr = grid.appendChild(document.createElement('tr'));
        for (var c=0;c<cols;++c){
            var cell = tr.appendChild(document.createElement('td'));
            // cell.innerHTML = ++i;
            cell.addEventListener('click',(function(el, r, c, i){
                return function(){
                    callback(el, r, c, i);
                }
            })(cell, r, c, i),false);
        }
    }
    return grid;
}
// ==============
// ==== Drag ====
// ==============

function allowDrop(ev) {
    ev.preventDefault();
}

function drag(ev) {
    ev.dataTransfer.setData("text", ev.target.id);
}

function drop(ev) {
    ev.preventDefault();
    var data = ev.dataTransfer.getData("text");
    ev.target.appendChild(document.getElementById(data));
}
// ===============
// == Generator ==
// ===============
let generator = getElement("cubegen")
let cubeNum = 0

generator.onmousedown = function(e) {
    const model = document.createElement('div')
    model.id = "cube-" + cubeNum
    cubeNum +=  1
    model.classList.add('cube')
    model.setAttribute("draggable", "true")
    model.setAttribute("ondragstart", "drag(event)")

    cubeNum += 1;

    for (let i=0; i<6; ++i){
        let face = document.createElement('div')
        face.classList.add('face')
        model.appendChild(face)
    }
    // append the element to the DOM
    container.appendChild(model)

}

</script>
